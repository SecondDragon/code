const webpack = require('webpack');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const path = require('path');
module.exports = {
    //mode设置为production,默认就会压缩
    mode: process.env.NODE_ENV === 'production' ? 'production' : 'development',
    entry:'./src/index.tsx',
    output:{
        path:path.join(__dirname,'dist'),
        filename:'main.js'
    },
    devtool:'source-map',
    devServer:{
        hot:true,
        contentBase:path.join(__dirname,'static'),
        historyApiFallback:{
            index:'./index.html'//browserHistory的时候刷新会报错，任意路径重定向到index.html里
        }
    },
    resolve:{
        alias:{
            '@':path.resolve(__dirname,'src'),
            '~':path.resolve(__dirname,'node_modules'),
        },
        extensions:['.ts','.tsx','.js','.json']
    },
    module:{
        rules:[
            {
                test:/.(j|t)sx?$/,
                loader:'babel-loader',//ts-loader
                options:{
                    presets:[
                        '@babel/preset-env',
                        "@babel/preset-react",
                        "@babel/preset-typescript"
                    ],
                    plugins:[
                        ['import',{libraryName:'antd',style:'css'}]
                    ]
                },
                //include:path.resolve('src'),
                exclude:/node_modules/
            },
            {
                test:/\.less$/,
                use:[
                    "style-loader",
                    {
                        loader:'css-loader',
                        options:{importLoaders:3}
                    },
                    {
                        loader:'postcss-loader',
                        options:{
                            postcssOptions:{
                                plugins:['autoprefixer']
                            }
                        }
                    },
                    {
                        loader:'px2rem-loader',
                        options:{
                            remUnit:75, //一个rem对应的px
                            remPrecesion:8//rem计算的时候保留的精度
                        }
                    },
                    'less-loader'
                ]
            },
            {
                test:/\.css$/,
                use:[
                    "style-loader",
                    {
                        loader:'css-loader',
                        options:{importLoaders:3}
                    },
                    {
                        loader:'postcss-loader',
                        options:{
                            postcssOptions:{
                                plugins:['autoprefixer']
                            }
                        }
                    }
                ]
            },
            {
                test:/\.(jpg|png|gif|svg|jpeg)/,
                type:'asset'
            }
        ]
    },
    plugins:[
        new HtmlWebpackPlugin({
            template:'./public/index.html'
        }),
        new webpack.HotModuleReplacementPlugin()//如果devServer{hot:true} 这句话会自动加入
    ]
}